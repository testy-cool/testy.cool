---
export const prerender = true;
import { type CollectionEntry, getCollection, render } from "astro:content";
import BaseLayout from "@/layouts/BaseLayout.astro";
import Header from "@/components/Header.astro";
import SectionBreak from "@/components/SectionBreak.astro";
import TagComponent from "@/components/Tag.astro";

export async function getStaticPaths() {
    const til = await getCollection("TIL", ({ data }) => {
        return import.meta.env.PROD ? data.draft !== true : true;
    });
    return til.map((entry) => ({
        params: { slug: entry.id },
        props: entry,
    }));
}

type Props = CollectionEntry<"TIL">;
const entry = Astro.props;
const { Content } = await render(entry);
---

<BaseLayout
    title={entry.data.title}
    description={entry.data.description}
    isArticle={true}
    publishedTime={entry.data.published.toISOString()}
    author="TestyCool"
    tags={entry.data.tags || []}>
    <Header>
        <h1 class="font-medium text-xl sm:text-2xl tracking-tight">
            {entry.data.title}
        </h1>
        <p class="mx-auto mt-2 max-w-md text-neutral-400 text-balance">
            {entry.data.description}
        </p>
        {
            entry.data.tags && entry.data.tags.length > 0 && (
                <div class="flex flex-wrap justify-center gap-2 mt-4">
                    {entry.data.tags.map((tag) => (
                        <TagComponent tag={tag} href={`/tags/${tag}`} />
                    ))}
                </div>
            )
        }
    </Header>
    <SectionBreak />
    <div class="px-4 sm:px-8 py-8 prose">
        <Content />
    </div>
</BaseLayout>
