---
export const prerender = true;
import { type CollectionEntry, getCollection, render } from "astro:content";
import BaseLayout from "@/layouts/BaseLayout.astro";
import Header from "@/components/Header.astro";
import SectionBreak from "@/components/SectionBreak.astro";
import TagComponent from "@/components/Tag.astro";
// import FormattedDate from "@/components/FormattedDate.astro";

export async function getStaticPaths() {
  const posts = await getCollection("posts", ({ data }) => {
    return import.meta.env.PROD ? data.draft !== true : true;
  });
  return posts.map((post) => ({
    params: { slug: post.id },
    props: post,
  }));
}

type Props = CollectionEntry<"posts">;
const post = Astro.props;
const { Content } = await render(post);
// const date = post.data.updated ?? post.data.published;
---

<BaseLayout
  title={post.data.title}
  description={post.data.description}
  isArticle={true}
  publishedTime={post.data.published.toISOString()}
  modifiedTime={post.data.updated?.toISOString()}
  author="TestyCool"
  tags={post.data.tags || []}>
  <Header>
    <h1 class="font-medium text-xl sm:text-2xl tracking-tight">
      {post.data.title}
    </h1>
    <p class="mx-auto mt-2 max-w-md text-neutral-400 text-balance">
      {post.data.description}
    </p>
    {
      post.data.tags && post.data.tags.length > 0 && (
        <div class="flex flex-wrap justify-center gap-2 mt-4">
          {post.data.tags.map((tag) => (
            <TagComponent tag={tag} href={`/tags/${tag}`} />
          ))}
        </div>
      )
    }
    <!-- <p class="mt-6 font-mono text-neutral-400 text-sm">
      Last modified <FormattedDate date={date} />
    </p> -->
  </Header>
  <SectionBreak />
  <div class="px-4 sm:px-8 py-8 prose">
    <Content />
  </div>
</BaseLayout>
